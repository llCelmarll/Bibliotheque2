services:
  # Backend API Python FastAPI
  backend:
    build: 
      context: ./backend
      dockerfile: Dockerfile
    container_name: bibliotheque_backend
    ports:
      - "8000:8000"
    volumes:
      - ./backend:/app
      - bibliotheque_data:/app/data
    environment:
      - DATABASE_URL=sqlite:///./data/bibliotheque.db
      - PYTHONPATH=/app
      - PYTHONUNBUFFERED=1
    networks:
      - bibliotheque_network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost:8000/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Frontend React Native/Expo Web
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: bibliotheque_frontend
    ports:
      - "8081:8081"
    volumes:
      - ./frontend:/app
      - /app/node_modules
    environment:
      - EXPO_PUBLIC_API_URL=http://localhost:8000
      - EXPO_DEVTOOLS_LISTEN_ADDRESS=0.0.0.0
      - REACT_NATIVE_PACKAGER_HOSTNAME=0.0.0.0
    networks:
      - bibliotheque_network
    depends_on:
      - backend
    restart: unless-stopped

  # Nginx Reverse Proxy (temporairement désactivé pour les tests)
  # nginx:
  #   image: nginx:alpine
  #   container_name: bibliotheque_nginx
  #   ports:
  #     - "80:80"
  #     - "443:443"
  #   volumes:
  #     - ./docker/nginx/nginx.conf:/etc/nginx/nginx.conf
  #     - ./docker/nginx/ssl:/etc/nginx/ssl
  #   networks:
  #     - bibliotheque_network
  #   depends_on:
  #     - backend
  #     - frontend
  #   restart: unless-stopped

# Volumes persistants
volumes:
  bibliotheque_data:
    driver: local

# Réseau pour la communication inter-services
networks:
  bibliotheque_network:
    driver: bridge